---
# xenial is needed for python 3.7
dist: xenial
language: python
sudo: required
_testScript: &testScript
    language: python
    # Use cache with pip to save time.
    cache: pip
    install:
        - pip install --upgrade -e .[tests,dev,docs]
    script:
        # Check code quality
        - flake8 .
        # Static type checking
        - mypy pachyderm
        # Run the tests
        - pytest -l -vv --cov=pachyderm --cov-branch -m "not ROOT" --durations=5 tests/
        # Check that the docs build successfully
        - pushd docs && make html && popd
        # Skip sending the coverage here because it will be rather low due to skipping the ROOT tests.
        # We will instead send that coverage report.
_dockerTestScript: &dockerTestScript
    before_script:
        # Build the docker image
        - docker build --build-arg PYTHON_VERSION=${PYTHON_VERSION} -t "${DOCKER_USERNAME}/pachyderm:${TRAVIS_TAG:-latest}-py${PYTHON_VERSION}" .
        # So we can see that the have the expected images
        - docker images
    script:
        # Other tests (flake8, etc) are covered by the test stage, so we just want to test and
        # uplaod coverage here.
        # Setup coverage
        - ci_env=`bash <(curl -s https://codecov.io/env)`
        # Run tests and upload coverage
        # Pachyderm was installed when the image was created above, so we don't need to install it again.
        - docker run $ci_env "${DOCKER_USERNAME}/pachyderm:${TRAVIS_TAG:-latest}-py${PYTHON_VERSION}" /bin/bash -c "pytest -l -vv --cov=pachyderm --cov-branch --durations=5 tests/ && bash <(curl -s https://codecov.io/bash)"
        # We could now push the image to docker hub. However, we don't really need it for anything, so
        # we skip this step for now.
        - bash docker/pushToDockerHub.sh
jobs:
    include:
        # Tests which require ROOT, coverage
        - stage: test
          <<: *dockerTestScript
          python: 3.6
          # For use with the docker image.
          env: PYTHON_VERSION=3.6.7
        - stage: test
          <<: *dockerTestScript
          python: 3.7
          # For use with the docker image.
          env: PYTHON_VERSION=3.7.1
        # Standard tests without ROOT
        # We give these the same name so the tests will run in parallel
        # NOTE: 3.6 is diabled due to a bug in mypy (probably in the typeshed). Specifically, when mypy runs,
        # it indicates that 'Module has no attribute "read_text"' when importlib_resources certainly does.
        # Normally, I would just diable typing on that line, but then 3.7 fails because the type: ignore is uncessary.
        # So for now (1 Dec 2019), we just diable running mypy in 3.6.
        #- stage: test
        #  <<: *testScript
        #  python: 3.6
        - stage: test
          <<: *testScript
          python: 3.7
        - stage: deploy
          python: 3.7
          # Always need a script to make Travis happy, so we effectively use a no-op.
          script: true
          deploy:
              provider: pypi
              user: rehlers
              password:
                  secure: ccA9Supmt5iw3XXi5tUaMR5M63sx0Oo21DnfNkiR9MMadb3il9u4iLTV7IzaXOzAuLBkW/WNcATpGQAYrj9Vo0okUwOnOCnku+1A6XTE2BVDnUOt9tZ1bvAVIUeiIc3APlbjmdPbnowgJblwERXA8JmjSHLY7zEZeDoXLv9rjlCEfEB2HYP037zUQDznqvavJft61J8piQYvdgVjeSMod0kVW1TIZ6tpwQQ1vSvP7sR3p7/Xn1rZKSJLf2CVHCOU/owQTtKVQ0PYA4p2tlNhEkB4csv7MFaGNtrwGDy7BWMJw2coyxNgW68DobcAQL0H8TZSi0Q1UJKBjr8qLjkvYMAhzX0ykjtVA6uQ8PB0+qa/+qVwe6hbg+Ln9nWd7cgI8RUQliIXsOPAp0pdioqOQOk8fIiNhiLLcyqWC2jtxvbk1uHNsypMeeBs9JgmV2udGPVxGWSA9UtV2i1dCMdepUd5woi4eVWGKetQD1rHvek8h1fT+24DwyqzvWHDC0alUx7sUbkPvu+V8hUwYwJw+fG0J4YaL6Now8SceQ85ZOxZlqoNVe9jNPUoHgYdXaTW3m6KdVZXgth794Y6CJdEOhvEbcWepYSLP3Cvf5divGxoHA/P6Yy5qXj1Fzs2FSI1ad98qTvlh6d/jeUvBSivxjbGyvTAC8V6Txg9/IaOQlM=
              distributions: sdist bdist_wheel
              on:
                  tags: true

---
os: linux
# xenial is needed for python 3.7
dist: xenial
language: python
_testScript: &testScript
    language: python
    # Use cache with pip to save time.
    cache: pip
    install:
        # Update pip first to try to avoid any issues with old versions
        - pip install --upgrade pip
        # Install poetry
        - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - && source $HOME/.poetry/env
        # Install the package
        - poetry install --extras docs
    script:
        # Check code quality
        - poetry run flake8 .
        # Static type checking
        # no-incremental helps with a ruamel.ymal bug. See: https://sourceforge.net/p/ruamel-yaml/tickets/328/
        - poetry run mypy pachyderm --no-incremental
        # Run the tests
        - poetry run pytest -l -vv --cov=pachyderm --cov-branch -m "not ROOT" --durations=5 tests/
        # Check that the docs build successfully
        - pushd docs && poetry run make html && popd
        # Skip sending the coverage here because it will be rather low due to skipping the ROOT tests.
        # We will instead send that coverage report.
_dockerTestScript: &dockerTestScript
    before_script:
        # Build the docker image
        - docker build --build-arg PYTHON_VERSION=${PYTHON_VERSION} -t "${DOCKER_USERNAME}/pachyderm:${TRAVIS_TAG:-latest}-py${PYTHON_VERSION}" .
        # So we can see that the have the expected images
        - docker images
    script:
        # Other tests (flake8, etc) are covered by the test stage, so we just want to test and
        # uplaod coverage here.
        # Setup coverage
        - ci_env=`bash <(curl -s https://codecov.io/env)`
        # Run tests and upload coverage
        # Pachyderm was installed when the image was created above, so we don't need to install it again.
        - docker run $ci_env "${DOCKER_USERNAME}/pachyderm:${TRAVIS_TAG:-latest}-py${PYTHON_VERSION}" /bin/bash -c "poetry run pytest -l -vv --cov=pachyderm --cov-branch --durations=5 tests/ && bash <(curl -s https://codecov.io/bash)"
        # We could now push the image to docker hub. However, we don't really need it for anything, so
        # we skip this step for now.
        - bash docker/pushToDockerHub.sh
jobs:
    include:
        # Tests which require ROOT, coverage
        #- stage: test
        #  <<: *dockerTestScript
        #  python: 3.6
        #  # For use with the docker image.
        #  env: PYTHON_VERSION=3.6.7
        - stage: test
          <<: *dockerTestScript
          python: 3.7
          # For use with the docker image.
          env: PYTHON_VERSION=3.7.1
        # Standard tests without ROOT
        # We give these the same name so the tests will run in parallel
        # NOTE: 3.6 is diabled due to a bug in mypy (probably in the typeshed). Specifically, when mypy runs,
        # it indicates that 'Module has no attribute "read_text"' when importlib_resources certainly does.
        # Normally, I would just diable typing on that line, but then 3.7 fails because the type: ignore is uncessary.
        # So for now (1 Dec 2019), we just diable running mypy in 3.6.
        #- stage: test
        #  <<: *testScript
        #  python: 3.6
        - stage: test
          <<: *testScript
          python: 3.7.2
        - stage: deploy
          python: 3.7
          # Always need a script to make Travis happy, so we effectively use a no-op.
          script: true
          # Setup poetry in the deploy step.
          before_deploy:
              # Upgrade pip just in case
              - python -m pip install --upgrade pip
              # Install poetry
              - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - && source $HOME/.poetry/env
          deploy:
              provider: script
              script: poetry publish --build -u __token__ -p ${PYPI_TOKEN}
              on:
                  tags: true
                  repo: raymondEhlers/pachyderm
